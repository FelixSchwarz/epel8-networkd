From 55798355455b9255458d6a705f8766c4dbe3ef73 Mon Sep 17 00:00:00 2001
From: Lukas Nykryn <lnykryn@redhat.com>
Date: Thu, 25 Oct 2018 16:34:00 +0200
Subject: [PATCH] debug-generator: introduce rd.* version of all options

(cherry picked from commit a7dd6d04b07f58df5c0294743d76df0be0b4b928)

Resolves: #1643429
---
 man/systemd-debug-generator.xml       | 27 +++++++++++++++++++--------
 src/debug-generator/debug-generator.c |  2 +-
 2 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/man/systemd-debug-generator.xml b/man/systemd-debug-generator.xml
index d5cf4109b0..fa88e8ac01 100644
--- a/man/systemd-debug-generator.xml
+++ b/man/systemd-debug-generator.xml
@@ -33,27 +33,38 @@
     that reads the kernel command line and understands three
     options:</para>
 
-    <para>If the <option>systemd.mask=</option> option is specified
-    and followed by a unit name, this unit is masked for the runtime,
-    similar to the effect of
+    <para>If the <option>systemd.mask=</option> or <option>rd.systemd.mask=</option>
+    option is specified and followed by a unit name, this unit is
+    masked for the runtime, similar to the effect of
     <citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>'s
     <command>mask</command> command. This is useful to boot with
     certain units removed from the initial boot transaction for
-    debugging system startup. May be specified more than once.</para>
+    debugging system startup. May be specified more than once.
+    <option>rd.systemd.mask=</option> is honored only by initial
+    RAM disk (initrd) while <option>systemd.mask=</option> is
+    honored only in the main system.</para>
 
-    <para>If the <option>systemd.wants=</option> option is specified
+    <para>If the <option>systemd.wants=</option> or
+    <option>rd.systemd.wants=</option> option is specified
     and followed by a unit name, a start job for this unit is added to
     the initial transaction. This is useful to start one or more
-    additional units at boot. May be specified more than once.</para>
+    additional units at boot. May be specified more than once.
+    <option>rd.systemd.wants=</option> is honored only by initial
+    RAM disk (initrd) while <option>systemd.wants=</option> is
+    honored only in the main system.</para>
 
-    <para>If the <option>systemd.debug_shell</option> option is
+    <para>If the <option>systemd.debug_shell</option> or
+    <option>rd.systemd.debug_shell</option> option is
     specified, the debug shell service
     <literal>debug-shell.service</literal> is pulled into the boot
     transaction. It will spawn a debug shell on tty9 during early
     system startup. Note that the shell may also be turned on
     persistently by enabling it with
     <citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>'s
-    <command>enable</command> command.</para>
+    <command>enable</command> command.
+    <option>rd.systemd.debug_shell=</option> is honored only by initial
+    RAM disk (initrd) while <option>systemd.debug_shell</option> is
+    honored only in the main system.</para>
 
     <para><filename>systemd-debug-generator</filename> implements
     <citerefentry><refentrytitle>systemd.generator</refentrytitle><manvolnum>7</manvolnum></citerefentry>.</para>
diff --git a/src/debug-generator/debug-generator.c b/src/debug-generator/debug-generator.c
index dd6ab94fa2..800d31cebe 100644
--- a/src/debug-generator/debug-generator.c
+++ b/src/debug-generator/debug-generator.c
@@ -154,7 +154,7 @@ int main(int argc, char *argv[]) {
 
         umask(0022);
 
-        r = proc_cmdline_parse(parse_proc_cmdline_item, NULL, 0);
+        r = proc_cmdline_parse(parse_proc_cmdline_item, NULL, PROC_CMDLINE_RD_STRICT | PROC_CMDLINE_STRIP_RD_PREFIX);
         if (r < 0)
                 log_warning_errno(r, "Failed to parse kernel command line, ignoring: %m");
 
